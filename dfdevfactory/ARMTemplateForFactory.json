{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfdevfactory"
		},
		"AZURE_DP_DB_SOURCE_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AZURE_DP_DB_SOURCE'"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"Data_Lake_Batch_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Data_Lake_Batch'"
		},
		"LS_ActivityLog_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ActivityLog'"
		},
		"LS_ActivityLogSynapse_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_ActivityLogSynapse'"
		},
		"LS_Dataset_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Dataset'"
		},
		"LS_EMPLSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_EMPLSQL'"
		},
		"LS_EMPLSTAGING_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_EMPLSTAGING'"
		},
		"LS_Oracle_Source_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Oracle_Source'"
		},
		"LS_Postgres_Server_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Postgres_Server'"
		},
		"LS_Validation_POC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Validation_POC'"
		},
		"execute_python_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'execute_python'"
		},
		"execute_python1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'execute_python1'"
		},
		"AZURE_DP_DB_SOURCE_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://deeshasource.dfs.core.windows.net/"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://schedulepython.eastus2.batch.azure.com"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "python-pool"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "schedulepython"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakeservice.dfs.core.windows.net/"
		},
		"LS_ActivityLog_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredp.dfs.core.windows.net/"
		},
		"LS_ActivityLogSynapse_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "tcp:azuredp-enterprise-warehouse.sql.azuresynapse.net,1433"
		},
		"LS_ActivityLogSynapse_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dedsqlpool"
		},
		"LS_ActivityLogSynapse_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azuredp203"
		},
		"LS_Dataset_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakeservice.dfs.core.windows.net/"
		},
		"LS_EMPLSTAGING_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakeservice.dfs.core.windows.net/"
		},
		"LS_Validation_POC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azure-dp-203.database.windows.net"
		},
		"LS_Validation_POC_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azure-dp-db"
		},
		"LS_Validation_POC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azuredp203"
		},
		"execute_python_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://runpythonscript.eastus2.batch.azure.com"
		},
		"execute_python_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "python-pool"
		},
		"execute_python_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "runpythonscript "
		},
		"execute_python1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://runpythonscript.eastus2.batch.azure.com"
		},
		"execute_python1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "python-pool"
		},
		"execute_python1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "runpythonscript"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DIM_BRAND_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T03:40:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_CATEGORY_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_category;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_category \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T09:51:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_CUSTOMER_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_DATE_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_PRODUCT_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_PROMOTION_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_STORE_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_INVENTORY_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_PROMOTION_EFFECTIVENESS_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_RETURNS_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_SALES_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_latest_update_dated",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(updated_at) as max_updated_date from dim_brand;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "set_max_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "extract_latest_update_dated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_date",
							"value": {
								"value": "@formatDateTime(activity('extract_latest_update_dated').output.firstRow.max_updated_date, 'yyyy-MM-dd HH:mm:ss')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * \nFROM dim_brand \nWHERE updated_at > TO_DATE('@{variables('max_date')}', 'YYYY-MM-DD HH24:MI:SS')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_brand_cdc",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_brand_cdc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"extracttableinfo": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "dim_brand_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"max_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/dataflows/dim_brand_cdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_brand')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_brand",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BRAND_ID",
											"type": "String"
										},
										"sink": {
											"name": "brand_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "BRAND_NAME",
											"type": "String"
										},
										"sink": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "brand_description",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_BRAND",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T02:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_BRAND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_category')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_category",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CATEGORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "CATEGORY_NAME",
											"type": "String"
										},
										"sink": {
											"name": "category_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PARENT_CATEGORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "parent_category_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_CATEGORY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_CATEGORY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T12:25:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_CATEGORY')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_CATEGORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CUSTOMER_ID",
											"type": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "FIRST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LAST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PHONE_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "phone_number",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ADDRESS",
											"type": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STATE",
											"type": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "POSTAL_CODE",
											"type": "String"
										},
										"sink": {
											"name": "postal_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER_SEGMENT",
											"type": "String"
										},
										"sink": {
											"name": "customer_segment",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_CUSTOMER",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_CUSTOMER",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-10T07:23:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_CUSTOMER')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_CUSTOMER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_date')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_date",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATE_ID",
											"type": "Double"
										},
										"sink": {
											"name": "date_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "DATE_VALUE",
											"type": "DateTime"
										},
										"sink": {
											"name": "date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DAY",
											"type": "String"
										},
										"sink": {
											"name": "day",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "MONTH",
											"type": "Double"
										},
										"sink": {
											"name": "month",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "YEAR",
											"type": "Double"
										},
										"sink": {
											"name": "year",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "QUARTER",
											"type": "Double"
										},
										"sink": {
											"name": "quarter",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "WEEK",
											"type": "Double"
										},
										"sink": {
											"name": "week",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "DAY_OF_WEEK",
											"type": "String"
										},
										"sink": {
											"name": "day_of_week",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "IS_WEEKEND",
											"type": "String"
										},
										"sink": {
											"name": "is_weekend",
											"type": "Boolean",
											"physicalType": "boolean"
										}
									},
									{
										"source": {
											"name": "IS_HOLIDAY",
											"type": "String"
										},
										"sink": {
											"name": "is_holiday",
											"type": "Boolean",
											"physicalType": "boolean"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_DATE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_DATE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T12:34:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_DATE')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_DATE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_product')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_product",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PRODUCT_ID",
											"type": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "PRODUCT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PRODUCT_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "product_description",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CATEGORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "BRAND_ID",
											"type": "String"
										},
										"sink": {
											"name": "brand_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "UNIT_PRICE",
											"type": "Decimal"
										},
										"sink": {
											"name": "unit_price",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COST_PRICE",
											"type": "Decimal"
										},
										"sink": {
											"name": "cost_price",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String"
										},
										"sink": {
											"name": "sku",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_PRODUCT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_PRODUCT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T12:25:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_PRODUCT')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_PRODUCT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_promotion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_promotion",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PROMOTION_ID",
											"type": "String"
										},
										"sink": {
											"name": "promotion_id",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PROMOTION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "promotion_name",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "PROMOTION_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "promotion_description",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "DISCOUNT_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "discount_type",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "DISCOUNT_VALUE",
											"type": "Decimal"
										},
										"sink": {
											"name": "discount_value",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "START_DATE",
											"type": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "END_DATE",
											"type": "String"
										},
										"sink": {
											"name": "end_date",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_PROMOTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_PROMOTION",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T02:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_PROMOTION')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_PROMOTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_store')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim_store",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "store_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STORE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "store_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_ADDRESS",
											"type": "String"
										},
										"sink": {
											"name": "store_address",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STATE",
											"type": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "POSTAL_CODE",
											"type": "String"
										},
										"sink": {
											"name": "postal_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_MANAGER",
											"type": "String"
										},
										"sink": {
											"name": "store_manager",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DIM_STORE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_DIM_STORE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:38:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DIM_STORE')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_STORE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_inventory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fact_inventory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "INVENTORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "inventory_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "PRODUCT_ID",
											"type": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "store_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "date_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STOCK_ON_HAND",
											"type": "String"
										},
										"sink": {
											"name": "stock_on_hand",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STOCK_SOLD",
											"type": "String"
										},
										"sink": {
											"name": "stock_sold",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STOCK_RECEIVED",
											"type": "String"
										},
										"sink": {
											"name": "stock_received",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "MINIMUM_STOCK_LEVEL",
											"type": "String"
										},
										"sink": {
											"name": "minimum_stock_level",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "MAXIMUM_STOCK_LEVEL",
											"type": "String"
										},
										"sink": {
											"name": "maximum_stock_level",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FACT_INVENTORY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_FACT_INVENTORY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T02:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FACT_INVENTORY')]",
				"[concat(variables('factoryId'), '/datasets/PG_FACT_INVENTORY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_promotion_effectiveness')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fact_promotion_effectiveness",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PROMOTION_ID",
											"type": "String"
										},
										"sink": {
											"name": "promotion_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "date_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "store_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "TOTAL_SALES_AMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "total_sales_amount",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "TOTAL_DISCOUNT_AMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "total_discount_amount",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "TOTAL_UNITS_SOLD",
											"type": "String"
										},
										"sink": {
											"name": "total_units_sold",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FACT_PROMOTION_EFFECTIVENESS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_FACT_PROMOTION_EFFECTIVENESS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:38:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FACT_PROMOTION_EFFECTIVENESS')]",
				"[concat(variables('factoryId'), '/datasets/PG_FACT_PROMOTION_EFFECTIVENESS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_returns')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fact_returns",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RETURN_ID",
											"type": "String"
										},
										"sink": {
											"name": "return_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "SALES_ID",
											"type": "String"
										},
										"sink": {
											"name": "sales_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "CUSTOMER_ID",
											"type": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "PRODUCT_ID",
											"type": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "store_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "date_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "RETURN_QUANTITY",
											"type": "String"
										},
										"sink": {
											"name": "return_quantity",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "RETURN_REASON",
											"type": "String"
										},
										"sink": {
											"name": "return_reason",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REFUND_AMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "refund_amount",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FACT_RETURNS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_FACT_RETURNS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:38:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FACT_RETURNS')]",
				"[concat(variables('factoryId'), '/datasets/PG_FACT_RETURNS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fact_sales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SALES_ID",
											"type": "String"
										},
										"sink": {
											"name": "sales_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_ID",
											"type": "String"
										},
										"sink": {
											"name": "transaction_id",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER_ID",
											"type": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "PRODUCT_ID",
											"type": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "store_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "date_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "PROMOTION_ID",
											"type": "String"
										},
										"sink": {
											"name": "promotion_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "QUANTITY_SOLD",
											"type": "String"
										},
										"sink": {
											"name": "quantity_sold",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "UNIT_PRICE",
											"type": "Decimal"
										},
										"sink": {
											"name": "unit_price",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "TOTAL_AMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "total_amount",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DISCOUNT_AMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "discount_amount",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "NET_AMOUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "net_amount",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CREATED_AT",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FACT_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_FACT_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Data Migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-09T06:38:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FACT_SALES')]",
				"[concat(variables('factoryId'), '/datasets/PG_FACT_SALES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_BRAND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_BRAND"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_CATEGORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_CUSTOMER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_DATE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_DATE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_PRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_PROMOTION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_PROMOTION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DIM_STORE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "DIM_STORE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FACT_INVENTORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "FACT_INVENTORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FACT_PROMOTION_EFFECTIVENESS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "FACT_PROMOTION_EFFECTIVENESS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FACT_RETURNS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "FACT_RETURNS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FACT_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle_Source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAJA",
					"table": "FACT_SALES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Oracle_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_INCREMENTAL_RESULTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ActivityLog",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "ora2pg"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ActivityLog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_BRAND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "brand_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "brand_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "brand_description",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_brand"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "category_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "category_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "parent_category_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_category"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_CUSTOMER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "first_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "email",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "phone_number",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "address",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "city",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "state",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "country",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "postal_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "customer_segment",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_DATE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "date_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "day",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "month",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "year",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "quarter",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "week",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "day_of_week",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_weekend",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_holiday",
						"type": "boolean",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_date"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "product_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "product_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_description",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "brand_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "unit_price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "cost_price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "sku",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_PROMOTION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "promotion_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "promotion_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promotion_description",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "discount_type",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "discount_value",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "start_date",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "end_date",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_promotion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_DIM_STORE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "store_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "store_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "store_address",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "city",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "state",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "country",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "postal_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "store_manager",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "dim_store"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_FACT_INVENTORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "inventory_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "product_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "store_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "date_id",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "stock_on_hand",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "stock_sold",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "stock_received",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "minimum_stock_level",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "maximum_stock_level",
						"type": "numeric",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "fact_inventory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_FACT_PROMOTION_EFFECTIVENESS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "promotion_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "date_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "store_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_sales_amount",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "total_discount_amount",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "total_units_sold",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "fact_promotion_effectiveness"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_FACT_RETURNS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "return_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sales_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "customer_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "store_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "date_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "return_quantity",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "return_reason",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "refund_amount",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "fact_returns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_FACT_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Postgres_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destination"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "sales_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "transaction_id",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "customer_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "store_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "date_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "promotion_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "quantity_sold",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "unit_price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "total_amount",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "discount_amount",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "net_amount",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "created_at",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "fact_sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Postgres_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZURE_DP_DB_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AZURE_DP_DB_SOURCE_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AZURE_DP_DB_SOURCE_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "Data_Lake_Batch",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Lake_Batch')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Data_Lake_Batch_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ActivityLog')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ActivityLog_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ActivityLog_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ActivityLogSynapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('LS_ActivityLogSynapse_properties_typeProperties_server')]",
					"database": "[parameters('LS_ActivityLogSynapse_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_ActivityLogSynapse_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_ActivityLogSynapse_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Dataset')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Dataset_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Dataset_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_EMPLSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_EMPLSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_EMPLSTAGING')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_EMPLSTAGING_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_EMPLSTAGING_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Oracle_Source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LS_Oracle_Source_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Postgres_Server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"version": "1.0",
				"typeProperties": {
					"connectionString": "[parameters('LS_Postgres_Server_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Validation_POC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Validation_POC_properties_typeProperties_server')]",
					"database": "[parameters('LS_Validation_POC_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Validation_POC_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Validation_POC_password')]"
					},
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/execute_python')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('execute_python_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('execute_python_properties_typeProperties_poolName')]",
					"accountName": "[parameters('execute_python_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "Data_Lake_Batch",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('execute_python_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/execute_python1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('execute_python1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('execute_python1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('execute_python1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "Data_Lake_Batch",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('execute_python1_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_brand_cdc')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CDC_FLOWS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference"
							},
							"name": "extracttableinfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PG_DIM_BRAND",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          BRAND_ID as string,",
						"          BRAND_NAME as string,",
						"          BRAND_DESCRIPTION as string,",
						"          CREATED_AT as string,",
						"          UPDATED_AT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> extracttableinfo",
						"extracttableinfo alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          brand_id as integer,",
						"          brand_name as string,",
						"          brand_description as string,",
						"          created_at as timestamp,",
						"          updated_at as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['brand_id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          brand_id = BRAND_ID,",
						"          brand_name = BRAND_NAME,",
						"          brand_description = BRAND_DESCRIPTION,",
						"          created_at = CREATED_AT,",
						"          updated_at = UPDATED_AT",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_BRAND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_category_cdc')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CDC_FLOWS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_INCREMENTAL_RESULTS",
								"type": "DatasetReference"
							},
							"name": "extracttableinfo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PG_DIM_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          BRAND_ID as string,",
						"          BRAND_NAME as string,",
						"          BRAND_DESCRIPTION as string,",
						"          CREATED_AT as string,",
						"          UPDATED_AT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> extracttableinfo",
						"extracttableinfo alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          category_id as decimal(38,0),",
						"          category_name as string,",
						"          parent_category_id as decimal(38,0),",
						"          created_at as timestamp,",
						"          updated_at as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['BRAND_ID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_INCREMENTAL_RESULTS')]",
				"[concat(variables('factoryId'), '/datasets/PG_DIM_CATEGORY')]"
			]
		}
	]
}